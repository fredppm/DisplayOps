name: Release Browser Extension

permissions:
  contents: write

on:
  push:
    tags:
      - 'ext-v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/ext-v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Read manifest version
        id: manifest
        run: |
          MANIFEST_VERSION=$(grep -o '"version": "[^"]*"' browser-extension/manifest.json | grep -o '[0-9.]*')
          echo "manifest_version=$MANIFEST_VERSION" >> $GITHUB_OUTPUT

      - name: Package extension
        run: |
          cd browser-extension
          zip -r ../displayops-extension-${{ steps.version.outputs.version }}.zip ./*
          cd ..
          ls -lh displayops-extension-*.zip

      - name: Generate checksum
        run: |
          sha256sum displayops-extension-${{ steps.version.outputs.version }}.zip > displayops-extension-${{ steps.version.outputs.version }}.zip.sha256
          cat displayops-extension-${{ steps.version.outputs.version }}.zip.sha256

      - name: Create Release with GitHub CLI
        run: |
          echo "Creating release for ${{ steps.version.outputs.tag_name }}..."
          
          # Create release
          gh release create ${{ steps.version.outputs.tag_name }} \
            --title "Browser Extension v${{ steps.version.outputs.version }}" \
            --notes "## DisplayOps Browser Extension v${{ steps.version.outputs.version }}
          
          ### Installation
          1. Download \`displayops-extension-${{ steps.version.outputs.version }}.zip\`
          2. Unzip the file
          3. Open Chrome/Edge and go to \`chrome://extensions\`
          4. Enable \"Developer mode\"
          5. Click \"Load unpacked\" and select the unzipped folder
          
          ### Info
          - Manifest version: ${{ steps.manifest.outputs.manifest_version }}
          
          ### Checksums
          See attached \`.sha256\` file for verification" || echo "Release might already exist"
          
          # Upload artifacts
          gh release upload ${{ steps.version.outputs.tag_name }} \
            displayops-extension-${{ steps.version.outputs.version }}.zip \
            displayops-extension-${{ steps.version.outputs.version }}.zip.sha256 \
            --clobber
          
          echo "âœ… Release created successfully!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release completed
        run: |
          echo "Browser Extension release created successfully!"
          echo "Download at: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.tag_name }}"

